1) Arrays in Java.
2)Types of Arrays.
3)Types of Arrays Example.
4)Sorting and Searching in Arrays.


Arrays in Java:
An array is  a datastructure that contains a homogeneous elements.
An array is a collection of similar data types.

Syntax:

type var-name[];
type[] var-name;



40  55  23  87  21  11   94  -->elements
0   1   2   3   4   5    6   -->index


index is position of the elements. It's always start with '0'.

Features of an Array:
1)In Java arrays are dynamically allocated.--> The compiler dosen't need to know the exact memory allocation in advance. In our program
2)All elements are stored under one name.--> Elements of the arrays are known by array name.
3)Occupies contigious memory location.--> Array occupies adjacent memory location unlike linked list.


Basic Program in Array:
1)Array_Simpli_learn.java
package Array_Programs;

public class Array_Simpli_learn {

	public static void main(String[] args) {
		
		
		int[] arr;
		arr = new int[5];
		
		arr[0]=10;
		arr[1]=20;
		arr[2]=30;
		arr[3]=40;
		arr[4]=50;
		
		for(int i = 0;i<arr.length;i++)
		{
			System.out.println("The elements from given array is " +i+" "+arr[i]);
		}
		
	}

}


Output:
The elements from given array is 0 10
The elements from given array is 1 20
The elements from given array is 2 30
The elements from given array is 3 40
The elements from given array is 4 50



Note: If i put the extra element in an array. Then what we will get. 

In the above array size is 5. So, we can say 5 is the length of the array. 0 to 4 we got 5 elements.
If i put extra one element in the array. The array size will become 6. It's 0 to 5 . Then the array size will be exceed.
So, our program output will be like below.

1)
package Array_Programs;

public class Array_Simpli_learn {

	public static void main(String[] args) {
		
		
		int[] arr;
		arr = new int[5];
		
		arr[0]=10;
		arr[1]=20;
		arr[2]=30;
		arr[3]=40;
		arr[4]=50;
		arr[5]=60;
		
		for(int i = 0;i<arr.length;i++)
		{
			System.out.println("The elements from given array is " +i+" "+arr[i]);
		}
		
	}

}


Output:

Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length 5
	at Array_Programs.Array_Simpli_learn.main(Array_Simpli_learn.java:16)


 Types of Arrays:
1)One dimensional Array
2)Two dimensional Array
3)Three dimensional Array.

1)One dimensional Array:

-->int Array = new int [5];

Description:
1) It is also known as linear array.
2) The elements are stored in a single row.


2)Two dimensional Array:

-->int[][] Array = new int[2][5];

Description:
1)Two- dimensional array stores the data in rows and columns.


3)Multi-Dimensional Arrays:
It's a combination of two or more arrays Or the nested arrays.

int[][][] Array = new int[3][3][3];


2)sum of elements in an array.[One dimensional array.]
package Array_Programs;

public class main {

	public static void main(String[] args) {
		
		
		int[] arr = {1,2,3,4,5};
		
		int sum = 0;
        
		for(int i=0;i<arr.length;i++)
		{
			sum += arr[i];
		}
		System.out.println("Sum of array is "+sum);
	}

}


Output:
Sum of array is 15

3)[Two dimensional array.]




package Array_Programs;

public class Two_D_Array {

	public static void main(String[] args) {
		
		int arr[][] = {{1,2,3},{4,5,6}};
		
		for(int i =0;i<2;i++)
		{
			for(int j=0;j<3;j++)
			{
				System.out.print(arr[i][j]+" ");
			}
			
			System.out.println();
		}
	}

}


Output:

1 2 3 
4 5 6 

Example- Multi_Dimensional_Array:
package Array_Programs;

public class Multi_D_Array {

	public static void main(String[] args) {
		
		int arr[][]= {{1,2,3},{4,5,6},{7,8,9}};
		
		for(int i =0;i<3;i++) {
			for(int j=0;j<3;j++)
			{
				System.out.println(arr[i][j]+" ");
			}
			System.out.println();
		}

	}

}


Output:
1 2 3 
4 5 6 
7 8 9 




Sorting and Searching using Arrays:


40   55    23  87  21     11   94    -->Elements

0     1     2   3   4      5    6    -->Indices



Ascending Order                                                                 Sorting Algorithm
------------------>

11    21   23     40    55   87 94  


The above example, depicts how the Sorting algorithm will works.
First, the numbers are in the collaborative order. Then, using the Sorting algorithm it will become the Ascending order.

Searching in Arrays:

We have 7 elements in a array. We need to find out 11 from the given array. using the searching algorithm to find that element in the given array.


40      55     23     87    21      11     94    --->Elements
0        1      2     3      4       5      6    --->Indices
                                                      |
                                                      |
                                                      |
 11 number find index number 5                                                    <--Find 11


Binary Search in java
---------------------
1)Binary_Search_Main.java
package Array_Programs;

import java.util.Scanner;
public class Binary_Search_Main {

	public static void main(String[] args) {
		
		Scanner s = new Scanner(System.in);
		
		binarySearch ob = new binarySearch();
		
		int arr[] =new int[5];
		
		System.out.println("Enter the elements of arrays in searching order:");
		
		for(int i=0;i<arr.length;i++) {
			arr[i] = s.nextInt();
		}
		System.out.println("Enter the element you want to search for:");
		
		int num = s.nextInt();
		
		int n = arr.length;
		int result = ob.binarySearch(arr, 0, n-1, num);
				
				if(result==1)
					System.out.println("Element not present.");
				else
					System.out.println("Element"+ num +"found at index"+result);		
		
	}

}


2)binarySearch.java
package Array_Programs;

public class binarySearch {
	
	
	int binarySearch(int arr[],int l, int r, int x) {
		
		if(r>=1) {
			int mid = l+(r-1)/2;
		if(arr[mid]==x)
			return mid;
		if(arr[mid]>x)
			return binarySearch(arr,l,mid-1,x);
					return binarySearch(arr,mid+1,r,x);
		}
		return-1;
	}

}



Sorting-Bubble Sort
-------------------

1)Bubble_Sort.java
package Array_Programs;

public class Bubble_Sort {
	
	void Bubble_Sort(int arr[]) {
		
		int n = arr.length;
		
		for(int i =0;i<n-1;i++)
			for(int j=0;j<n-i-1;j++)
				if(arr[j]>arr[j+1]) {
					int temp = arr[j];
					arr[j]= arr[j+1];
					arr[j+1] = temp;					
				}
					
	}

	void print(int arr[]) {
		
		int n = arr.length;
		System.out.println("Sorted array:");
		for(int i=0;i<n;i++)
			System.out.print(arr[i]+" ");
		System.out.println();
	}
	
}

2)Bubble_Sort_Main.java
package Array_Programs;

import java.util.Scanner;
public class Bubble_Sort_Main {

	public static void main(String[] args) {
		
		Scanner s = new Scanner(System.in);
		Bubble_Sort ob = new Bubble_Sort();
		
		int arr[] = new int[5];
		
		System.out.println("Enter the Elements:");
		
		for(int i =0;i<arr.length;i++)
			arr[i]=s.nextInt();
		ob.Bubble_Sort(arr);
		System.out.println("Sorted Array:");
		ob.print(arr);
		
		
	}

}

Output:

Enter the Elements:
1  5  9  2  4
Sorted Array:
Sorted array:
1 2 4 5 9 



